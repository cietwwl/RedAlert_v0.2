<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
   "http://ibatis-with-memcached.googlecode.com/files/sql-map-config-2.dtd">


<sqlMap namespace="ServerInfo">
	<typeAlias alias="country" type="com.youxigu.dynasty2.map.domain.Country"/>
	<typeAlias alias="state" type="com.youxigu.dynasty2.map.domain.State"/>  
	<typeAlias alias="mapCell" type="com.youxigu.dynasty2.map.domain.MapCell"/>


	<cacheModel type="MEMCACHED" id="cache_mapCell" serialize="false" readOnly="false">
		<flushOnExecute statement="updateMapCell">
			<flushModel flushstatement="mapCell" flushMode="update" flushpara="id"/>
		</flushOnExecute>
		<property name="class" value="mapCell"/>
		<property name="pk" value="id"/>
	</cacheModel>



	<cacheModel type="MEMCACHED" id="cache_state" serialize="false" readOnly="false">
		<flushOnExecute statement="updateState">
			<flushModel flushstatement="state" flushMode="update" flushpara="stateId"/>
		</flushOnExecute>
		<property name="class" value="state"/>
		<property name="pk" value="stateId"/>
	</cacheModel>

	<select id="getMapCellsByStateId" resultClass="mapCell" ><!--程序自行处理缓存，这里不缓存，cacheModel="cache_mapCell" cacheOnlyObject="true"-->
		select * from mapcell where stateId = #stateId# 
	</select>
  
  <select id="getAvialbleMapCells" parameterClass="java.util.Map" resultClass="mapCell"><!--not cache-->
    SELECT * FROM mapcell B JOIN (SELECT ROUND((MAX(ID)-MIN(ID))*RAND()+MIN(ID)) AS ID1 FROM mapcell WHERE stateId = #stateId# and casId=0 and castType=0) AS m ON B.ID &gt;= m.ID1 and B.stateId = #stateId# and B.casId=0 and B.castType=0 LIMIT #count#;
  </select>

	<select id="getMapCellsByIds" parameterClass="java.util.List" resultClass="mapCell" cacheModel="cache_mapCell" cacheOnlyObject="true">
		select * from mapcell where id in 
		<iterate open="(" close=")"  conjunction=",">
					#[]#
		</iterate>
	</select>

	<select id="getCastleNums" resultClass="java.util.HashMap" ><!--not cache-->
		select stateId,count(id) as num from mapcell where casId >0 and castType=1 group by stateId
	</select>

	<update id="updateMapCell" parameterClass="mapCell"><!--注意这里不要异步更新,因为getAvialbleMapCells不走缓存-->
		UPDATE mapcell SET casId = #casId# ,castType=#castType# WHERE id=#id#
	</update>
	
		<!--工具方法，用于生成mapCell数据-->
	<insert id="insertMapCell" parameterClass="mapCell">
		INSERT INTO mapcell(id,posX,posY,stateId,casId,castType) values(#id#,#posX#,#posY#,#stateId#,#casId#,#castType#)
	</insert>


	<select id="listAllCountry" resultClass="country">
		SELECT * FROM country
	</select>

	<select id="getCountryById" resultClass="country">
		SELECT * FROM country where countryId=#countryId#
	</select>

	<select id="getStateById" resultClass="state" cacheModel="cache_state" cacheOnlyObject="true">
		SELECT * FROM state where stateId=#stateId#
	</select>

	<select id="getStatesByCountryId" resultClass="state" cacheModel="cache_state">
		SELECT * FROM state where countryId=#countryId#
	</select>

	<update id="updateState" parameterClass="state" asyncUpdate="2">
		UPDATE state SET status = #status# WHERE stateId=#stateId#
	</update>
  
  <select id="getMapCellById" resultClass="mapCell" cacheModel="cache_mapCell" cacheOnlyObject="true">
    SELECT * FROM mapcell WHERE id=#id#
  </select>

</sqlMap>