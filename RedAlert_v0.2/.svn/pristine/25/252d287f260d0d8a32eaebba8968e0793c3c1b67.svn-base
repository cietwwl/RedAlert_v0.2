package com.youxigu.dynasty2.map.domain;

import java.io.Serializable;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

/**
 * 区缓存
 * 
 * @author LK
 * @date 2016年2月4日
 */
public class StateCache implements Serializable {
	private State state;// 区定义
	private Map<Integer, MapCell> cells;// 区下的所有点

	// 用于清空数据
	private Map<Integer, MapCell> resCells;// 资源点
	private Map<Integer, MapCell> npcCells;// npc点

	public StateCache() {
	}

	public StateCache(State state) {
		this.state = state;
		this.cells = new ConcurrentHashMap<Integer, MapCell>();// 区下的所有点
		this.resCells = new ConcurrentHashMap<Integer, MapCell>();// 资源点
		this.npcCells = new ConcurrentHashMap<Integer, MapCell>();// npc点
	}

	public int getStateId() {
		return state.getStateId();
	}

	public State getState() {
		return state;
	}

	public void setState(State state) {
		this.state = state;
	}

	public Map<Integer, MapCell> getCells() {
		return cells;
	}

	public void setCells(Map<Integer, MapCell> cells) {
		this.cells = cells;
	}

	public Map<Integer, MapCell> getResCells() {
		return resCells;
	}

	public void setResCells(Map<Integer, MapCell> resCells) {
		this.resCells = resCells;
	}

	public Map<Integer, MapCell> getNpcCells() {
		return npcCells;
	}

	public void setNpcCells(Map<Integer, MapCell> npcCells) {
		this.npcCells = npcCells;
	}

	/**
	 * 初始化点的缓存
	 * 
	 * @param mapcell
	 */
	public void addCell(MapCell mapcell) {
		int id = mapcell.getId();
		cells.put(id, mapcell);
		int castType = mapcell.getCastType();
		if (castType == MapCell.CAS_TYPE_NPC) {
			npcCells.put(id, mapcell);
		} else if (castType == MapCell.CAS_TYPE_RES) {
			resCells.put(id, mapcell);
		}
	}

	public int getCellsNum() {
		return cells.size();
	}
}
